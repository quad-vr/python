pipeline:
  identifier: Build_quad_vr_python_1728911929069
  name: Build python
  orgIdentifier: default
  projectIdentifier: Envi
  properties:
    ci:
      codebase:
        build: <+input>
        connectorRef: account.Github_OAuth_1728911894082
        repoName: quad-vr/python
  stages:
    - stage:
        identifier: build
        name: build
        spec:
          caching:
            enabled: true
          cloneCodebase: true
          execution:
            steps:
              - step:
                  identifier: runlinter
                  name: run linter
                  spec:
                    shell: Sh
                    command: |-
                      pip install flake8
                      flake8 .
                  timeout: ""
                  type: Run
              - step:
                  identifier: setupvirtualenvironment
                  name: setup virtual environment
                  spec:
                    command: |-
                      python3 -m venv .venv
                      . .venv/bin/activate
                      python3 -m pip install -r requirements.txt
                      python3 -m pip install -e .
                  timeout: ""
                  type: Run
              - step:
                  type: Run
                  identifier: build_python_app
                  name: Build Python App
                  spec:
                    shell: Sh
                    command: echo "Welcome to Harness CI"
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
        type: CI
    - stage:
        name: Test
        identifier: Test
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
          execution:
            steps:
              - step:
                  type: Run
                  name: Test
                  identifier: Test
                  spec:
                    shell: Sh
                    command: |-
                      # Install coverage if not already installed
                      python3 -m pip install coverage

                      # Run the tests and collect coverage data
                      coverage run -m unittest discover

                      # Generate a coverage report in the console
                      coverage report

                      # Optionally generate a coverage XML report
                      coverage xml
    - stage:
        name: Code Vulnerability
        identifier: Code_Vulnerability
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
          execution:
            steps:
              - step:
                  type: Owasp
                  name: Owasp_1
                  identifier: Owasp_1
                  spec:
                    mode: orchestration
                    config: default
                    target:
                      type: repository
                      detection: auto
                    advanced:
                      log:
                        level: info
              - step:
                  type: BuildAndPushDockerRegistry
                  name: BuildAndPushDockerRegistry_1
                  identifier: BuildAndPushDockerRegistry_1
                  spec:
                    connectorRef: Docker_Connector
                    repo: docker pull vsr03/harness_test1
                    tags:
                      - latest
